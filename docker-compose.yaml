version: '3.9'

services:
  api:
    build:
      context: ./src/api
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - ./src/api/.env
    networks:
      - messaging-default

  worker:
    build:
      context: ./src/worker
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - ./src/worker/.env
    networks:
      - messaging-default

  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - messaging-default
    
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - messaging-default

volumes:
  postgres-data:
  redis-data:

networks:
  messaging-default:
    driver: bridge